source ~/antigen.zsh

antigen use oh-my-zsh

antigen bundle git
antigen bundle fasd
antigen bundle vi-mode

antigen bundle zsh-users/zsh-syntax-highlighting

antigen theme denysdovhan/spaceship-prompt

antigen apply

[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git'

## put in fasd hooks:
eval "$(fasd --init auto)"


####### Bullet Train #########
BULLETTRAIN_PROMPT_ADD_NEWLINE=false
BULLETTRAIN_STATUS_EXIT_SHOW=true
BULLETTRAIN_CONTEXT_DEFAULT_USER='mjsobrep'
# autoload -Uz vcs_info
# zstyle ':vcs_info:*' enable git
# zstyle ':vcs_info:git*:*' get-revision true
# zstyle ':vcs_info:git*:*' check-for-changes true
# zstyle ':vcs_info:git*' formats "(%s) %12.12i %c%u %b%m"
# zstyle ':vcs_info:git*' actionformats "(%s|%a) %12.12i %c%u %b%m"
# # precmd(){ vcs_info }
# setopt prompt_subst
# BULLETTRAIN_GIT_PROMPT_CMD=\${\$(git_prompt_info)//\\//\ î‚±\ ${vcs_info_msg_0_  }
# git diff --cached --name-only | wc -l # the staged files



###### Trying to autoload keyboard mods #######
setxkbmap -option "lv3:caps_switch"

###### ROS Support ######
function ifip { /sbin/ifconfig $1 | grep "inet addr" | awk -F: '{print $2}' |awk '{print $1}'; }

case $(hostname) in
    linPower)
        export ROS_IP=`ifip enp0s31f6`;;
    x220t)
        export ROS_IP=`ifip wlp3s0`;;
    *)
        echo "unknown system";;
esac

function connect_to_robot {
    echo "setting up for $1"
    source /opt/ros/kinetic/setup.zsh
    source ~/catkin_ws/devel/setup.zsh

    # takes a single number arg representing the robot
    if [ "$1" = "flo" ]
    then
        export ROS_MASTER_URI=http://flo-nuc:11311
        echo "added nuc as master uri"
    elif [ "$1" = "kq" ]
    then
        export ROS_MASTER_URI=http://192.168.1.24:11311
        echo "added kendal's computer as master uri"
    elif [ "$1" = "x220" ]
    then
        export ROS_MASTER_URI=http://192.168.1.20:11311
        echo "added Lenovo X220T as master uri"
    elif (( $1 == 0 ))
    then
        export ROS_MASTER_URI=http://localhost:11311
        echo "connected to local machine"
    fi
    echo "done setting up ros"
}

########## SSH into flo
function ssh-flo {
    ssh nuc-admin@flo-nuc
}


###### Adding Tex to Path #####
# If we used sudo to install:
path+=('/usr/local/texlive/2018/bin/x86_64-linux')
manpath+=('/usr/local/texlive/2018/texmf-dist/doc/man')
infopath+=('/usr/local/texlive/2018/texmf-dist/doc/info')
# If we did a user install (as done in the install script)
read year <<< $(ls /home/$USER/texlive | grep 20)
path+=("/home/$USER/texlive/$year/bin/x86_64-linux")
manpath+=("/home/$USER/texlive/$year/texmf-dist/doc/man")
infopath+=("/home/$USER/texlive/$year/texmf-dist/doc/info")

#### Adding NVR to path ####
path+=('/home/mjsobrep/.local/bin')
export PATH
export MANPATH
export INFOPATH

#### Getting keyboard stuff to work ####
#xmodmap ~/.Xmodmap
#numlockx on
#

#### Using system clipboard ####
yanktoclipboard(){
    echo $BUFFER | xsel -i -b
}
pastefromclipboard(){
    RBUFFER=$(xsel -o -b </dev/null)$RBUFFER
}
zle -N yanktoclipboard
zle -N pastefromclipboard
bindkey -a 'yy' yanktoclipboard
bindkey -a 'p' pastefromclipboard


#### Set Text Editor ####
export EDITOR='nvim'
export VISUAL='nvim'

#### Node packages ####
#from: https://github.com/sindresorhus/guides/blob/master/npm-global-without-sudo.md
NPM_PACKAGES="${HOME}/.npm-packages"

export PATH="$NPM_PACKAGES/bin:$PATH"

## Ruby
#export GEM_HOME="$HOME/gems"
#export PATH="$HOME/gems/bin:$PATH"

# Add RVM to PATH for scripting. Make sure this is the last PATH variable change.
export PATH="$PATH:$HOME/.rvm/bin"
